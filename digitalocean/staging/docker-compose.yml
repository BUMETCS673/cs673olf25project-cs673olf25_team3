# Framework-generated: 0%
# Human-written: 100%
# AI-generated: 0% (cors origins)

version: "3.8"

services:
  nginx:
    image: nginx:1.23.4-alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/certs:/etc/nginx/certs
    environment: 
      - FRONTEND_SERVER_NAME=${FRONTEND_SERVER_NAME}
      - BACKEND_SERVER_NAME=${BACKEND_SERVER_NAME}
      - ALLOWED_ORIGIN=${ALLOWED_ORIGIN}
      - FRONTEND_CERT_NAME=${FRONTEND_CERT_NAME}
      - BACKEND_CERT_NAME=${BACKEND_CERT_NAME}
    depends_on:
      - backend
      - frontend
      
  backend:
    image: ${REGISTRY_URL}/${REGISTRY}/${DOCKER_IMAGE_BACKEND_DEV}:latest
    container_name: ${BACKEND_CONTAINER_NAME}
    env_file:
      - ./.env.backend
    ports:
      - "8000:8000"
    command: python manage.py runserver 0.0.0.0:8000

  frontend:
    image: ${REGISTRY_URL}/${REGISTRY}/${DOCKER_IMAGE_FRONTEND_DEV}:latest
    container_name: ${FRONTEND_CONTAINER_NAME}
    env_file:
      - ./.env.frontend
    ports:
      - "5173:5173"
    command: npm run dev -- --host 0.0.0.0

networks:
  default:
    driver: bridge